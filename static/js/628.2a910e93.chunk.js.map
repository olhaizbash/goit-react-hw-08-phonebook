{"version":3,"file":"static/js/628.2a910e93.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactsForm/ContactForm.module.css?78ec","components/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/ContactsPage.module.css?7675","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__7kL4l\",\"list\":\"ContactList_list__csErn\",\"listContacts\":\"ContactList_listContacts__3Nus2\",\"title\":\"ContactList_title__gpugJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"data_container\":\"Modal_data_container__P1ZSS\",\"form\":\"Modal_form__FEIVf\",\"button\":\"Modal_button__PTCbC\",\"overlay\":\"Modal_overlay__r63M6\",\"modal\":\"Modal_modal__DJDMv\"};","import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contactsReduser';\nimport css from './Modal.module.css';\nimport { selectId } from 'redux/selectors';\n\nexport function Modal({ onClose }) {\n  const dispatch = useDispatch();\n  const idData = useSelector(selectId);\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log(idData);\n    dispatch(editContact({ idData, data }));\n    onClose();\n  };\n\n  //   const fetch = () => {\n  //     dispatch(fetchContacts());\n  //   };\n\n  return (\n    <div className={css.overlay} onClick={handleBackdropClick}>\n      <div className={css.modal}>\n        <div className={css.data_container}>\n          <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n            <h2>New information about contact</h2>\n            <label>\n              <span>* Name:</span>\n              <input {...register('name', { required: true })} type=\"text\" />\n              {errors.email && <span>This field is required</span>}\n            </label>\n            <label>\n              <span>* Phone number:</span>\n              <input {...register('number', { required: true })} type=\"tel\" />\n              {errors.password && <span>This field is required</span>}\n            </label>\n\n            <button className={css.button} type=\"submit\">\n              Edit contact\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import css from './ContactList.module.css';\nimport {\n  selectContact,\n  selectContactIsLoading,\n  selectContactsError,\n  selectContactsFilter,\n} from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsReduser';\nimport { Loader } from 'components/Loader';\nimport { Modal } from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport { setId } from 'redux/contactsReduser';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContact);\n  const isLoading = useSelector(selectContactIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const filteredContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase().trim());\n  });\n  return (\n    <ul className={css.list}>\n      <h2 className={css.title}>Your contacts list:</h2>\n      {isLoading && <Loader />}\n      {error && <div>Sorry, there are no contacts in your phonebook</div>}\n      {contacts !== null &&\n        filteredContacts.map(({ id, name, number }) => {\n          return (\n            <li className={css.listContacts} key={id}>\n              {name}: <span>{number}</span>\n              <button\n                className={css.button}\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n              <button\n                className={css.button}\n                onClick={() => {\n                  openModal();\n                  console.log(id);\n                  dispatch(setId(id));\n                }}\n                type=\"button\"\n              >\n                Edit\n              </button>\n              {isModalOpen && (\n                <Modal\n                  onClose={() => {\n                    closeModal();\n                  }}\n                />\n              )}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"data_container\":\"ContactForm_data_container__XaQS-\",\"form\":\"ContactForm_form__Vl2ry\",\"button\":\"ContactForm_button__XgtsX\"};","import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contactsReduser';\nimport css from './ContactForm.module.css';\n\nconst ContactsForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(addContact(data));\n    reset();\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.data_container}>\n      <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          <span>Name:</span>\n          <input {...register('name', { required: true })} type=\"text\" />\n          {errors.email && <span>This field is required</span>}\n        </label>\n        <label>\n          <span>Phone number:</span>\n          <input {...register('number', { required: true })} type=\"tel\" />\n          {errors.password && <span>This field is required</span>}\n        </label>\n\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactsForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__wVnxJ\"};","import { setFilter } from 'redux/contactsReduser';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className={css.form}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => dispatch(setFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BubeA\"};","import { ContactList } from 'components/ContactList/ContactList';\nimport ContactsForm from 'components/ContactsForm/ContactsForm';\nimport { Filter } from 'components/Filter/Filter';\nimport React from 'react';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <div className={css.container}>\n      <ContactsForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Modal","_ref","onClose","dispatch","useDispatch","idData","useSelector","selectId","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","_useForm","useForm","register","handleSubmit","errors","formState","_jsx","className","css","onClick","target","currentTarget","children","_jsxs","onSubmit","data","console","log","editContact","_objectSpread","required","type","email","password","ContactList","contacts","selectContact","isLoading","selectContactIsLoading","error","selectContactsError","filter","selectContactsFilter","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","filteredContacts","contact","name","toLowerCase","includes","trim","Loader","map","id","number","deleteContact","setId","reset","fetchContacts","addContact","Filter","onChange","setFilter","value","ContactsForm"],"sourceRoot":""}